{"version":3,"file":"form.min.js","sources":["../src/form.js"],"sourcesContent":["import Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport * as Str from 'core/str';\n\nlet modal = null;\nlet responseModal = null;\nlet contextid = null;\nlet appendurl = false;\n\n/**\n * Get the page fragment for the form.\n *\n * @param {array} params\n * @returns {*|Deferred}\n */\nfunction getForm(params) {\n    return Fragment.loadFragment('block_messageteacher', 'message_form', contextid, params);\n}\n\n/**\n * Display the form modal and load the form.\n *\n * @param {Event} e\n */\nfunction showForm(e) {\n    e.preventDefault();\n    modal.show();\n    modal.setBody(getForm(e.currentTarget.dataset));\n}\n\n/**\n * Send the message entered into the form using a core webservice.\n *\n * @param {Event} e\n */\nasync function submitForm(e) {\n    e.preventDefault();\n    var recipientid = modal.getRoot().find('[name=recipientid]').val();\n    var message = modal.getRoot().find('[name=message]').val();\n    if (appendurl) {\n        message += \"\\n\\n\" + modal.getRoot().find('[name=referurl]').val();\n    }\n\n    M.util.js_pending('block_messageteacher_send');\n\n    try {\n        const response = await Ajax.call([{\n            methodname: 'core_message_send_instant_messages',\n            args: {\n                'messages': [\n                    {\n                        'touserid': recipientid,\n                        'text': message\n                    }\n                ]\n            }\n        }])[0];\n\n        modal.hide();\n        if (response.msgid === -1) {\n            responseModal.setBody(response.errormessage);\n        } else {\n            const sent = await Str.get_string('messagesent', 'block_messageteacher');\n            responseModal.setBody(sent);\n        }\n        responseModal.show();\n        M.util.js_complete('block_messageteacher_send');\n    } catch (ex) {\n        modal.hide();\n        responseModal.setBody(ex.message);\n        responseModal.show();\n        M.util.js_complete('block_messageteacher_send');\n    }\n}\n\n/**\n * Create modals.\n *\n * Create a Save/Cancel modal to display the form, and a Cancel modal for confirmation/error messages.\n */\nexport const init = async function() {\n\n    const title = await Str.get_string('pluginname', 'block_messageteacher');\n    const send = await Str.get_string('send', 'block_messageteacher');\n\n    responseModal = await ModalFactory.create({\n        type: ModalFactory.types.DEFAULT,\n        title: title\n    });\n\n    modal = await ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: title\n    });\n    modal.setLarge();\n    modal.setSaveButtonText(send);\n\n    modal.getRoot().on(ModalEvents.hidden, function() {\n        modal.setBody('');\n    }.bind(this));\n\n    // We catch the modal save event, and use it to submit the form inside the modal.\n    // Triggering a form submission will give JS validation scripts a chance to check for errors.\n    modal.getRoot().on(ModalEvents.save, function(e) {\n        e.preventDefault();\n        modal.getRoot().find('form').submit();\n    });\n    // We also catch the form submit event and use it to submit the form with ajax.\n    modal.getRoot().on('submit', 'form', submitForm);\n\n    var links = document.querySelectorAll('.messageteacher_link');\n    for (var i = 0; i < links.length; i++) {\n        if (contextid === null) {\n            contextid = links[i].parentElement.parentElement.dataset.contextid;\n            appendurl = links[i].parentElement.parentElement.dataset.appendurl;\n        }\n        links[i].addEventListener('click', showForm);\n    }\n};\n"],"names":["modal","responseModal","contextid","appendurl","showForm","e","params","preventDefault","show","setBody","currentTarget","dataset","Fragment","loadFragment","submitForm","recipientid","getRoot","find","val","message","M","util","js_pending","Ajax","call","methodname","args","response","hide","msgid","errormessage","Str","get_string","sent","js_complete","_context2","init","title","send","ModalFactory","create","type","types","DEFAULT","SAVE_CANCEL","setLarge","setSaveButtonText","on","ModalEvents","hidden","bind","this","save","submit","links","document","querySelectorAll","i","length","parentElement","addEventListener"],"mappings":"uwEAMIA,MAAQ,KACRC,cAAgB,KAChBC,UAAY,KACZC,WAAY,WAiBPC,SAASC,OATDC,OAUbD,EAAEE,iBACFP,MAAMQ,OACNR,MAAMS,SAZOH,OAYSD,EAAEK,cAAcC,QAX/BC,kBAASC,aAAa,uBAAwB,eAAgBX,UAAWI,mBAmBrEQ,6IAAf,kBAA0BT,wJACtBA,EAAEE,iBACEQ,YAAcf,MAAMgB,UAAUC,KAAK,sBAAsBC,MACzDC,QAAUnB,MAAMgB,UAAUC,KAAK,kBAAkBC,MACjDf,YACAgB,SAAW,OAASnB,MAAMgB,UAAUC,KAAK,mBAAmBC,OAGhEE,EAAEC,KAAKC,WAAW,+DAGSC,cAAKC,KAAK,CAAC,CAC9BC,WAAY,qCACZC,KAAM,UACU,CACR,UACgBX,iBACJI,cAIpB,aAVEQ,wBAYN3B,MAAM4B,QACkB,IAApBD,SAASE,+BACT5B,cAAcQ,QAAQkB,SAASG,uEAEZC,IAAIC,WAAW,cAAe,gCAA3CC,oBACNhC,cAAcQ,QAAQwB,cAE1BhC,cAAcO,OACdY,EAAEC,KAAKa,YAAY,+GAEnBlC,MAAM4B,OACN3B,cAAcQ,QAAQ0B,aAAGhB,SACzBlB,cAAcO,OACdY,EAAEC,KAAKa,YAAY,sIASdE,sDAAO,sKAEIL,IAAIC,WAAW,aAAc,sCAA3CK,oCACaN,IAAIC,WAAW,OAAQ,sCAApCM,mCAEgBC,uBAAaC,OAAO,CACtCC,KAAMF,uBAAaG,MAAMC,QACzBN,MAAOA,sBAFXpC,6CAKcsC,uBAAaC,OAAO,CAC9BC,KAAMF,uBAAaG,MAAME,YACzBP,MAAOA,qBAFXrC,qBAIM6C,WACN7C,MAAM8C,kBAAkBR,MAExBtC,MAAMgB,UAAU+B,GAAGC,sBAAYC,OAAQ,WACnCjD,MAAMS,QAAQ,KAChByC,KAAKC,OAIPnD,MAAMgB,UAAU+B,GAAGC,sBAAYI,MAAM,SAAS/C,GAC1CA,EAAEE,iBACFP,MAAMgB,UAAUC,KAAK,QAAQoC,YAGjCrD,MAAMgB,UAAU+B,GAAG,SAAU,OAAQjC,YAEjCwC,MAAQC,SAASC,iBAAiB,wBAC7BC,EAAI,EAAGA,EAAIH,MAAMI,OAAQD,IACZ,OAAdvD,YACAA,UAAYoD,MAAMG,GAAGE,cAAcA,cAAchD,QAAQT,UACzDC,UAAYmD,MAAMG,GAAGE,cAAcA,cAAchD,QAAQR,WAE7DmD,MAAMG,GAAGG,iBAAiB,QAASxD"}